plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '6.0.+'
}

version = '0.1.0'
group = 'com.hutizaki.ducksgalore'
base {
    archivesName = 'ducksgalore'
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

// Ensure we use Java 17 - simplify to reduce any conflicts
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

println "Java: ${System.getProperty('java.version')}, JVM: ${System.getProperty('java.vm.version')} (${System.getProperty('java.vendor')}), Arch: ${System.getProperty('os.arch')}"

minecraft {
    mappings channel: mapping_channel, version: mapping_version

    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'ducksgalore'
            
            // Just use the JVM argument for compatibility
            jvmArg "-XX:+AllowRedefinitionToAddDeleteMethods"

            mods {
                ducksgalore {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'ducksgalore'
            
            // Just use the JVM argument for compatibility
            jvmArg "-XX:+AllowRedefinitionToAddDeleteMethods"

            mods {
                ducksgalore {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'ducksgalore', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            
            // Just use the JVM argument for compatibility
            jvmArg "-XX:+AllowRedefinitionToAddDeleteMethods"

            mods {
                ducksgalore {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    mavenCentral()
    maven { url = 'https://maven.minecraftforge.net/' } // Forge
    maven { url = 'https://maven.parchmentmc.org' }
    maven { url = 'https://maven.tterrag.com/' }
    maven { url = 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }
}

dependencies {
    // For more info, see: https://docs.minecraftforge.net/en/latest/gettingstarted/dependencymanagement/

    // Specify the version of Minecraft to use.
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    // Note: Dependencies temporarily commented out due to resolution issues
    // They can be uncommented and configured properly as needed
    
    /*
    // Add Registrate dependency
    implementation fg.deobf("com.tterrag.registrate:Registrate:MC${minecraft_version}-${registrate_version}")
    jarJar(group: 'com.tterrag.registrate', name: 'Registrate', version: "[MC${minecraft_version},MC1.20.2)")
    
    // Add GeckoLib dependency - using a Maven-compatible version specification
    implementation fg.deobf("software.bernie.geckolib:geckolib-forge-${minecraft_version}:${geckolib_version}")
    jarJar(group: 'software.bernie.geckolib', name: "geckolib-forge-${minecraft_version}", version: "[${geckolib_version},5.0.0)")
    */
}

tasks.named('jar', Jar) {
    manifest {
        attributes([
            "Specification-Title"     : "ducksgalore",
            "Specification-Vendor"    : "hutizaki",
            "Specification-Version"   : "1",
            "Implementation-Title"    : project.name,
            "Implementation-Version"  : project.version,
            "Implementation-Vendor"   : "hutizaki",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
    finalizedBy('reobfJar')
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact tasks.named('jar')
        }
    }
    repositories {
        maven {
            url = uri(layout.buildDirectory.dir("../mcmodsrepo").get().asFile)
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
